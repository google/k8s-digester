apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
    digester/operation: webhook
    digester/system: "yes"
  name: digester-controller-manager
  namespace: digester-system
spec:
  replicas: 3
  selector:
    matchLabels:
      control-plane: controller-manager
      digester/operation: webhook
      digester/system: "yes"
  template:
    metadata:
      annotations:
        prometheus.io/port: "8888"
      labels:
        control-plane: controller-manager
        digester/operation: webhook
        digester/system: "yes"
    spec:
      containers:
      - args:
        - webhook
        - --cert-dir=/certs
        - --disable-cert-rotation=false
        - --dry-run=false
        - --health-addr=:9090
        - --metrics-addr=:8888
        - --offline=false
        - --port=8443
        env:
        - name: DEBUG
          value: "false"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: ghcr.io/google/k8s-digester:v0.1.13@sha256:d1f64b466db8909c30a1a8f48f791f61d5fe1b03f8bb918ee3a71799c129237e
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
        name: manager
        ports:
        - containerPort: 8443
          name: webhook-server
          protocol: TCP
        - containerPort: 8888
          name: metrics
          protocol: TCP
        - containerPort: 9090
          name: healthz
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
        resources:
          requests:
            cpu: 100m
            ephemeral-storage: 256Mi
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          readOnlyRootFilesystem: true
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        volumeMounts:
        - mountPath: /certs
          name: cert
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: digester-admin
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: digester-webhook-server-cert
